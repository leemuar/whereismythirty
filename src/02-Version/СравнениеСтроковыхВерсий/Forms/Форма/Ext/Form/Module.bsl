// Возвращает массив с числовыми значениями версий
// Бросает исключение, если версия указана некорректно
//
// Параметры:
//  Версия  - Строка - версия в виде строки, например 8.3.12.254
//
// Возвращаемое значение:
//   Массив   - Массив с числами версий
//
&НаКлиенте
Функция ПолучитьСоставВерсии(Знач Версия)

	Разделитель = ".";
	Состав = РазделитьСтроку(Версия, Разделитель);
	
	// преобразуем строковые представления версий в числовые
	Для ТекущийИндекс = 0 По Состав.ВГраница() Цикл
		ВерсияСтрока = Состав[ТекущийИндекс];
		// Преобразуем в число
		Попытка
			ВерсияЧисло = Число(ВерсияСтрока);
		Исключение
			Сообщение = "Ошибка разбора версии " + Версия
			          + ", подверсия " + ВерсияСтрока + " имеет не поддерживаемый формат";
			ВызватьИсключение Сообщение;
		КонецПопытки;
		// заменим строковую версию на числовую
		Состав[ТекущийИндекс] = ВерсияЧисло;
	КонецЦикла;
	
	Возврат Состав;

КонецФункции


// Разделяет строку на массив подстрок по разделителю
//
// Параметры:
//  РазделяемаяСтрока  - Строка - Строка, которую нужно разделить
//
//  Разделитель  - Строка - Строка-разделитель
//
//  ВключатьПустые  - Булево - Включать ли в результат пустые строки (если они есть)
//
// Возвращаемое значение:
//   Массив   - Массив с подстроками
//
&НаКлиенте
Функция РазделитьСтроку(Знач РазделяемаяСтрока, Знач Разделитель = ",", Знач ВключатьПустые = Истина)

	Возврат СтрРазделить(РазделяемаяСтрока, Разделитель, ВключатьПустые);

КонецФункции


// Сравнивает две версии, представленные в виде строки *.*.*.*
// Бросает исключение в случае некорректных параметров
//
// Параметры:
//  ЛеваяВерсия  - Строка - Версия в виде строки, например 8.3.12.254
//
//  ПраваяВерсия  - Строка - Версия в виде строки, например 8.3.12.254
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   Число   - Результат сравнения версий. -1 если левая меньше, 
//             0 если версии равны, 1 если правая версия меньше
//
&НаКлиенте
Функция СравнитьВерсии1С(Знач ЛеваяВерсия, Знач ПраваяВерсия)

	Перем РезультатМеньше, РезультатБольше, РезультатРавно;
	РезультатМеньше = -1;
	РезультатБольше = 1;
	РезультатРавно = 0;

	Результат = РезультатРавно;
	
	// получим составляющие версий
	// будет брошено исключение, если не удасться распарсить версию
	СоставЛевая = ПолучитьСоставВерсии(ЛеваяВерсия);
	СоставПравая = ПолучитьСоставВерсии(ПраваяВерсия);
	
	// Сравним значения двух параллельных массивов
	КоличествоПодверсий = 4;
	Для ТекущийИндекс = 0 По КоличествоПодверсий - 1 Цикл
		Если СоставЛевая[ТекущийИндекс] < СоставПравая[ТекущийИндекс] Тогда
			 Результат = РезультатМеньше;
			 // не имеет смысла проверять следующие версии
			 Прервать;
		 ИначеЕсли СоставЛевая[ТекущийИндекс] > СоставПравая[ТекущийИндекс] Тогда
			 Результат = РезультатБольше;
			 // не имеет смысла проверять следующие версии
			 Прервать;
		КонецЕсли;
	КонецЦикла;
		
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура СравнитьВерсии(Команда)
	
	РезультатСравнения = СравнитьВерсии1С(ЛеваяВерсия, ПраваяВерсия);
	
	// выведем результат сравнения
	Если РезультатСравнения < 0 Тогда
		Сообщить("Правая версия больше");
	ИначеЕсли РезультатСравнения > 0 Тогда
		Сообщить("Левая версия больше");
	Иначе
		Сообщить("Версии равны");
	КонецЕсли;
	
КонецПроцедуры
